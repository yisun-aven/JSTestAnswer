### JS Test

const factories = [
  { name: "BR1", employees: ["John", "Alice", "Bob", "Jessie", "Karen"] },
  { name: "BR2", employees: ["Jessie", "Karen", "John"] },
  { name: "BR3", employees: ["Miles", "Eric", "Henry", "Bob"] },
  { name: "BR4", employees: [] }
]; 


1. Count Employees Number by Factory // => [ {name: 'BR1', count: 4}, ... ]
2. Count Factories Number by Employee // => [ {employee: 'John', count: 2}, ... ]
3. Order employees list by alphabetical order // =>   { name: "BR2", employees: ["Jessie", "John", "Karen"] }

const employeeType = [
      {id: 1, "name": "FullTime", work_begin: "09:00:00", work_end: "17:00:00"},
      {id; 2, "name": "MidTime", work_begin: "12:00:00", work_end: "21:00:00"},
      {id: 3, "name": "HalfTime", work_begin: "20:00:00", work_end: "00:00:00"},
];

const employees = [
        {id: 1, name: "Alice", type: 2},
        {id: 2, name: "Bob", type: 3},
        {id: 3, name: "John", type: 2},
        {id: 4, name: "Karen", type: 1},
        {id: 5, name: "Miles", type: 3},
        {id: 6, name: "Henry", type: 1}
];

const tasks = [
      {id: 1, title: "task01", duration: 60 //min},
      {id: 2, title: "task02", duration: 120},
      {id: 3, title: "task03", duration: 180},
      {id: 4, title: "task04", duration: 360},
      {id: 5, title: "task05", duration: 30},
      {id: 6, title: "task06", duration: 220},
      {id: 7, title: "task07", duration: 640},
      {id: 8, title: "task08", duration: 250},
      {id: 9, title: "task09", duration: 119},
      {id: 10, title: "task10", duration: 560},
      {id: 11, title: "task11", duration: 340},
      {id: 12, title: "task12", duration: 45},
      {id: 13, title: "task13", duration: 86},
      {id: 14, title: "task14", duration: 480},
      {id: 15, title: "task15", duration: 900}
];


4. Count total hours worked in 1 day ? // => 39
5. Make a function that take as parameters dayTime and return number of employee working // howManyEmployeeByTime(time) => int
6. How many days of work needed to done all tasks ? // => 1 day = 9:00 to 00:00 between 00:00 and 09:00 doesnt count.




### JS Answerd

// 1
function countEmployeesByFactory(factories) {
  return factories.map(factory => ({
    name: factory.name,
    count: factory.employees.length
  }));
}

// 2
function countFactoriesByEmployee(factories) {
  const employees = factories.reduce((acc, factory) => {
    factory.employees.forEach(employee => {
      acc[employee] = acc[employee] ? acc[employee] + 1 : 1;
    });
    return acc;
  }, {});
  return Object.entries(employees).map(([employee, count]) => ({
    employee,
    count
  }));
}

// 3 
function orderEmployeesByAlphabeticalOrder(factories, name) {
  const factory = factories.find(factory => factory.name === name);
  if (factory) {
    return {
      name: factory.name,
      employees: factory.employees.sort()
    };
  }
  return null;
}

// 4
function convertTimeToHours(time) {
  const [hours] = time.split(":").map(Number);
  return hours;
}

function countTotalHoursWorked(employeeType, employees) {
  const totalHours = employees.reduce((total, employee) => {
    const employeeTypeObj = employeeType.find(type => type.id === employee.type);
    const beginHours = convertTimeToHours(employeeTypeObj.work_begin);
    const endHours = convertTimeToHours(employeeTypeObj.work_end);
    const duration = endHours >= beginHours ? endHours - beginHours : (24 - beginHours) + endHours;
    return total + duration;
  }, 0);
  return totalHours;
}

// 5 
function howManyEmployeeByTime(dayTime) {
  const matchingEmployees = employees.filter(employee => {
    const employeeTypeObj = employeeType.find(type => type.id === employee.type);
    const beginTime = employeeTypeObj.work_begin;
    var tempEnd = employeeTypeObj.work_end
    if (employeeTypeObj.work_end === "00:00:00") {
        tempEnd = "24:00:00"
    }
    const endTime = tempEnd
    return dayTime >= beginTime && dayTime <= endTime;
  });

  return matchingEmployees.length;
}

// 6 
function calculateWorkDays(employeeType, employees, tasks) {
  const totalTaskDuration = tasks.reduce((total, task) => {
    return total + task.duration;
  }, 0);
  
  const workHoursPerDay = countTotalHoursWorked(employeeType, employees);
  const workDays = Math.ceil(totalTaskDuration / (workHoursPerDay * 60));
  return workDays;
  
}
